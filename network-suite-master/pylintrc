[MASTER]

# Add files or directories to the blacklist. They should be base names, not
# paths.
ignore=.git .tox

# Allow loading of arbitrary C extensions. Extensions are imported into the
# active Python interpreter and may run arbitrary code.
unsafe-load-any-extension=yes


[REPORTS]

# Set the output format. Available formats are text, parseable, colorized, json
# and msvs (visual studio). You can also give a reporter class, e.g.
# mypackage.mymodule.MyReporterClass.
output-format=colorized

# Tells whether to display a full report or only the messages.
reports=yes


[BASIC]

# Regular expression matching correct argument names. Overrides argument-
# naming-style.
argument-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct attribute names. Overrides attr-naming-
# style.
attr-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct class names. Overrides class-naming-
# style.
class-rgx=[A-Z_][a-zA-Z0-9]+$

# Regular expression matching correct constant names. Overrides const-naming-
# style.
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# Regular expression matching correct function names. Overrides function-
# naming-style.
function-rgx=[a-z_][a-z0-9_]{2,30}$

# Good variable names which should always be accepted, separated by a comma.
good-names=e,
           i,
           j,
           k,
           _

# Regular expression matching correct method names. Overrides method-naming-
# style.
method-rgx=[a-z_][a-z0-9_]{2,30}$

# Regular expression matching correct module names. Overrides module-naming-
# style.
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression which should only match function or class names that do
# not require a docstring.
no-docstring-rgx=

# Regular expression matching correct variable names. Overrides variable-
# naming-style.
variable-rgx=[a-z_][a-z0-9_]{2,30}$


[FORMAT]

# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.
expected-line-ending-format=LF

# Maximum number of characters on a single line.
max-line-length=80


[TYPECHECK]

# List of members which are set dynamically and missed by pylint inference
# system, and so shouldn't trigger E1101 when accessed. Python regular
# expressions are accepted.
generated-members=pytest.config

# List of class names for which member attributes should not be checked (useful
# for classes with dynamically set attributes). This supports the use of
# qualified names.
ignored-classes=

# List of module names for which member attributes should not be checked
# (useful for modules/projects where namespaces are manipulated during runtime
# and thus existing member attributes cannot be deduced by static analysis). It
# supports qualified module names, as well as Unix pattern matching.
ignored-modules=distutils


[VARIABLES]

# Argument names that match this expression will be ignored. Default to name
# with leading underscore.
ignored-argument-names=_.*


[CLASSES]

# List of method names used to declare (i.e. assign) instance attributes.
defining-attr-methods=__init__,
                      __new__,
                      setUp


[IMPORTS]

# Deprecated modules which should not be used, separated by a comma.
deprecated-modules=regsub,
                   TERMIOS,
                   Bastion,
                   rexec
